[system]
Based on the NPC's recent dialogue and the current game context, describe a fitting, game-relevant action they should perform immediately after speaking.

Respond with exactly one line.
- If the action takes no parameters, use: `ACTION: ActionName`
- If the action takes parameters, use: `ACTION: ActionName PARAMS: {"param_name1": "value1", "param_name2": 123, ...}` (ensure PARAMS value is a valid JSON object).
- If no action clearly fits, return: `ACTION: None`
[ end system ]

[ user ]
{{ "## NPC" }}
- Name: {{ npc.name }}
- Mood: {{ npc.mood }}
- State: {{ npc.state }} — {{ npc.stateDescription }}
- Location: {{ location }}

{{ "## Dialogue" }}
"{{ dialogue_response }}"

{{ render_template("components\\event_history") }}

{{ "## Eligible Actions" }}
{% for action in eligible_actions %}
- ACTION: {{ action.name }}{% if action.parameterSchema and length(action.parameterSchema) > 0 %} PARAMS_SCHEMA: {{ action.parameterSchema }}{% endif %} — {{ action.description }}
{% endfor %}
{% if length(eligible_targets) > 0 %}
{{ "## Eligible Targets" }}
{% for target in eligible_targets %}
- {{ target.name }}
{% endfor %}
{% endif %}{% if length(inventory) > 0 %}
{{ "## Inventory" }}
The following items are available to {{ npc.name }}:
{% for item in inventory %}
- {{ item.quantity }} × {{ item.name }}
{% endfor %}
{% endif %}{% if length(weapons) > 0 %}
{{ "## Known Weapons" }}
{% for weapon in weapons %}
- {{ weapon.name }}
{% endfor %}
{% endif %}{% if length(spells) > 0 %}
{{ "## Known Spells" }}
{% for spell in spells %}
- {{ spell.name }} — {{ spell.description }}
{% endfor %}
{% endif %}

---

{{ "## Format Reminder:" }}
- `ACTION: ActionName`
- `ACTION: ActionName PARAMS: {"param1": "value"}`
- `ACTION: None`

Only return one line, beginning with "ACTION:" and nothing else.
[ end user ]
